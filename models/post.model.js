const { Schema, model } = require('mongoose');

/**
 * Post (or Comment) document shape
 * ───────────────────────────────
 *  _id         ObjectId  – autogenerated
 *  post_id     ObjectId  – the parent post (omit if this **is** the post)
 *  user_id     String    – or ObjectId if you have a Users collection
 *  content     String    – text body
 *  type        String    – e.g. "news" | "opinion" | "question"…
 *  created_at  Date      – filled automatically
 *  updated_at  Date      – filled automatically
 */
const PostSchema = new Schema(
  {
    post_id: {
      type: Schema.Types.ObjectId,
      ref : 'Post',
      required: true,
    },
    user_id: {
      type: Schema.Types.ObjectId,  
      ref : 'User',              
      required: true,
    },
    // If this is a post of type poll, it will have a poll_id
    // Otherwise, it will not have a poll_id
    poll_id: {
      type: Schema.Types.ObjectId,
      ref: 'Poll',
      required: function () {
        return this.type === 'poll';
      }
    },
    content: {
      type: String,
      required: true,
      trim: true,
    },
    type: {
      type: String,
      enum: ['news', 'poll', 'event'],
      default: 'news',
    },
  },
  {
    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },
    collection: 'Posts',
  }
);

module.exports = model('Post', PostSchema);
